version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports: 
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    
  basketdb:
    container_name: basketdb
    restart: always
    ports: 
      - "6379:6379"

  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "Lol12345"
        ACCEPT_EULA: 'Y'
    restart: always
    ports:
        - "1434:1433"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=Lol12345"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - orderdb
        - rabbitmq
    ports:
        - "8004:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - basketdb
        - rabbitmq
    ports:
      - "8001:80"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  mongo_data:
  portainer_data:
  
 